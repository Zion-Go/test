FROM dustynv/ros:humble-pytorch-l4t-r35.3.1

############ Source ####################

# install bootstrap tools
RUN apt-get update && apt-get install --no-install-recommends -y \
    build-essential \
    git \
    python3-colcon-common-extensions \
    python3-colcon-mixin \
    python3-rosdep \
    python3-vcstool \
    && rm -rf /var/lib/apt/lists/*

# bootstrap rosdep
# RUN rosdep init && \
#  rosdep update --rosdistro $ROS_DISTRO

# setup colcon mixin and metadata
RUN colcon mixin add defaul \
      https://raw.githubusercontent.com/colcon/colcon-mixin-repository/master/index.yaml && \
    colcon mixin update && \
    colcon metadata add defaul \
      https://raw.githubusercontent.com/colcon/colcon-metadata-repository/master/index.yaml && \
    colcon metadata update

# install ros2 packages
# RUN apt install software-properties-common \
#     && add-apt-repository universe \
#     && apt update && sudo apt install curl -y \
#     && curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg \
#     && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" \
#     | tee /etc/apt/sources.list.d/ros2.list > /dev/null \
#     && apt update && sudo apt install -y \
#     python3-flake8-docstrings \
#     python3-pip \
#     python3-pytest-cov \
#     ros-dev-tools \
#     && apt install -y \
#     python3-flake8-blind-except \
#     python3-flake8-builtins \
#     python3-flake8-class-newline \
#     python3-flake8-comprehensions \
#     python3-flake8-deprecated \
#     python3-flake8-import-order \
#     python3-flake8-quotes \
#     python3-pytest-repeat \
#     python3-pytest-rerunfailures \
#     && 

# install basic libs needed
RUN apt-get update && apt-get install -y \
    wget vim usbutils python3 python3-pip x11-xserver-utils
# install ros sub pkgs: rviz2 cvbridge v4l2 rqt
RUN apt install -y v4l-utils
RUN pip install setuptools==58.2.0

# install GStreamer
# RUN apt-get install -y libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev \
#     libgstreamer-plugins-bad1.0-dev gstreamer1.0-plugins-base gstreamer1.0-plugins-good \
#     gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly gstreamer1.0-libav gstreamer1.0-tools \
#     gstreamer1.0-x gstreamer1.0-alsa gstreamer1.0-gl gstreamer1.0-gtk3 gstreamer1.0-qt5 \
#     gstreamer1.0-pulseaudio
    
# install openCV
RUN apt install -y python3-opencv

# build pytorch

# install tis_driver
# RUN git clone https://github.com/TheImagingSource/tiscamera.git \
#     && cd tiscamera \
#     && ./scripts/dependency-manager install -y \
#     && mkdir build \
#     && cmake -DTCAM_BUILD_TOOLS=ON -DTCAM_BUILD_V4L2=ON -DTCAM_BUILD_LIBUSB=ON \
#     && make \
#     && make install

# source ros2
RUN echo "source /opt/ros/humble/setup.bash" >> /root/.bashrc


# Set docker container username
ARG USER=cuda_ros
ARG UID=1000
ARG GID=1000
ARG PW=user 
RUN useradd -m ${USER} --uid=${UID} && echo "${USER}:${PW}" | chpasswd

WORKDIR /home/${USER}
RUN cd /home/${USER} && mkdir cuda_ros2_repos && chown -R ${UID}:${GID} ./

USER ${UID}:${GID}
